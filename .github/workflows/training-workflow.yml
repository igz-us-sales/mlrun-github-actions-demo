name: training-workflow
on: 
  workflow_dispatch:
    inputs:
      existing_model_path:
        description: 'Model path of existing model for comparison'     
        required: false
        default: 'None'

jobs:
  drife-dected:
    name: drift-trigged
    #if: startsWith(github.event.comment.body, '/train')
    runs-on: ubuntu-latest
    environment: 'dev'
    steps:
    - name: echo github.event.comment.body
      run: echo ${{github.event.comment.body}}    

    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: '3.6'
        architecture: 'x64'

    - name: echo out github.event.issue.number
      run: echo ${{github.event.issue.number}}    
    - name: Install mlrun
      run: python -m pip install mlrun
    - name: Model drift trigger re-training

      run: echo do nothing, just kick off the apprval process for re-training

      env:
        V3IO_USERNAME: ${{ secrets.V3IO_USERNAME }}
        V3IO_PASSWORD: ${{ secrets.V3IO_USERNAME }}
        V3IO_API: ${{ secrets.V3IO_API }}
        V3IO_ACCESS_KEY: ${{ secrets.V3IO_ACCESS_KEY }}
        MLRUN_DBPATH: ${{ secrets.MLRUN_DBPATH }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        CMD: ${{ github.event.comment.body}}  
        COMMIT: ${{ github.sha}}

  training-workflow:
    name: training-model
    #if: startsWith(github.event.comment.body, '/train')
    runs-on: ubuntu-latest
    environment: 'qa'
    needs: [drife-dected]
    steps:
    - name: echo github.event.comment.body
      run: echo ${{github.event.comment.body}}    

    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: '3.6'
        architecture: 'x64'

    - name: echo out github.event.issue.number
      run: echo ${{github.event.issue.number}}    
    - name: Install mlrun
      run: python -m pip install mlrun
    - name: Training model

      run: |
        echo -m mlrun project ./project \
        --secrets env=GITHUB_TOKEN \
        --git-repo ${GITHUB_REPOSITORY} \
        -w -x commit=${COMMIT:33} -r train \
        -a ${{ github.event.inputs.existing_model_path}}
        python -m mlrun project ./project \
        --secrets env=GITHUB_TOKEN \
        --git-repo ${GITHUB_REPOSITORY} \
        -w -x commit=${COMMIT:33} -r train \
        -a ${{ github.event.inputs.existing_model_path}}
      env:
        V3IO_USERNAME: ${{ secrets.V3IO_USERNAME }}
        V3IO_PASSWORD: ${{ secrets.V3IO_USERNAME }}
        V3IO_API: ${{ secrets.V3IO_API }}
        V3IO_ACCESS_KEY: ${{ secrets.V3IO_ACCESS_KEY }}
        MLRUN_DBPATH: ${{ secrets.MLRUN_DBPATH }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        CMD: ${{ github.event.comment.body}}  
        COMMIT: ${{ github.sha}}