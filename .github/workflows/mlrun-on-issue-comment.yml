name: model-monitorinng-workflow
on: [issue_comment]

jobs:
  training-or-retraning:
    name: training-or-retraining
    if: startsWith(github.event.comment.body, '/train')
    runs-on: ubuntu-latest
    environment: 'dev'
    steps:
    - name: echo github.event.comment.body
      run: echo ${{github.event.comment.body}}    

    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: '3.6'
        architecture: 'x64'

    - name: echo out github.event.issue.number
      run: echo ${{github.event.issue.number}}    
    - name: Install mlrun
      run: python -m pip install mlrun
    - name: Submit project

      run: python -m mlrun project ./project --secrets env=GITHUB_TOKEN --git-repo ${GITHUB_REPOSITORY} -w -x commit=${COMMIT:33} -r train

      env:
        V3IO_USERNAME: ${{ secrets.V3IO_USERNAME }}
        V3IO_PASSWORD: ${{ secrets.V3IO_USERNAME }}
        V3IO_API: ${{ secrets.V3IO_API }}
        V3IO_ACCESS_KEY: ${{ secrets.V3IO_ACCESS_KEY }}
        MLRUN_DBPATH: ${{ secrets.MLRUN_DBPATH }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        CMD: ${{ github.event.comment.body}}  
        COMMIT: ${{ github.sha}}

  deploy-to-qa:
    name: deploy-to-qa
    if: startsWith(github.event.comment.body, '/qa')
    runs-on: ubuntu-latest
    environment: 'qa'
    needs: training-or-retraning
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: '3.6'
        architecture: 'x64'

    - name: echo out github.event.issue.number
      run: echo ${{github.event.issue.number}}    
    - name: Install mlrun
      run: python -m pip install mlrun
    - name: Submit project
      run: python -m mlrun project ./project --secrets env=GITHUB_TOKEN --git-repo ${GITHUB_REPOSITORY} -w -x commit=${COMMIT:33} -r train
      env:
        V3IO_USERNAME: ${{ secrets.V3IO_USERNAME }}
        V3IO_PASSWORD: ${{ secrets.V3IO_USERNAME }}
        V3IO_API: ${{ secrets.V3IO_API }}
        V3IO_ACCESS_KEY: ${{ secrets.V3IO_ACCESS_KEY }}
        MLRUN_DBPATH: ${{ secrets.MLRUN_DBPATH }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        CMD: ${{ github.event.comment.body}}  
        COMMIT: ${{ github.sha}}


  deploy-to-production:
    name: deploy-to-production
    if: startsWith(github.event.comment.body, '/production')    
    runs-on: ubuntu-latest
    environment: 'prod'
    needs: [training-or-retraning, deploy-to-qa]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: '3.6'
        architecture: 'x64'

    - name: echo out github.event.issue.number
      run: echo ${{github.event.issue.number}}    
    - name: Install mlrun
      run: python -m pip install mlrun
    - name: Submit project
      run: python -m mlrun project ./project --secrets env=GITHUB_TOKEN --git-repo ${GITHUB_REPOSITORY} -w -x commit=${COMMIT:33} -r train
      env:
        V3IO_USERNAME: ${{ secrets.V3IO_USERNAME }}
        V3IO_PASSWORD: ${{ secrets.V3IO_USERNAME }}
        V3IO_API: ${{ secrets.V3IO_API }}
        V3IO_ACCESS_KEY: ${{ secrets.V3IO_ACCESS_KEY }}
        MLRUN_DBPATH: ${{ secrets.MLRUN_DBPATH }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        CMD: ${{ github.event.comment.body}}  
        COMMIT: ${{ github.sha}}